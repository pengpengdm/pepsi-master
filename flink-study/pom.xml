<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.pepsi</groupId>
  <artifactId>flink-study</artifactId>
  <version>1.1-SNAPSHOT</version>

  <name>flink-study</name>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <elasticsearch.version>5.4.3</elasticsearch.version>
    <flink.version>1.7.2</flink.version>
    <scala.binary.version>2.11</scala.binary.version>
    <kafka.binary.version>0.10</kafka.binary.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-java</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-connector-kafka-${kafka.binary.version}_${scala.binary.version}</artifactId>
      <version>${flink.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.6</version>
    </dependency>
    <!-- ES 客户端  -->
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>transport</artifactId>
      <version>${elasticsearch.version}</version>
    </dependency>

    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>rest</artifactId>
      <version>${elasticsearch.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
    </dependency>



    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.25</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>

    <dependency>
      <groupId>com.tdunning</groupId>
      <artifactId>t-digest</artifactId>
      <version>3.2</version>
    </dependency>

    <dependency>
      <groupId>org.hbase</groupId>
      <artifactId>asynchbase</artifactId>
      <version>1.8.2</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <!-- JDT can save type information of Java 8 lambda in the runtime. -->
          <compilerId>jdt</compilerId>
          <encoding>UTF-8</encoding>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-compiler-jdt</artifactId>
            <version>1.3.0</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- Do NOT use a version >=2.19.X, as test cases may get stuck before execution. See SUREFIRE-1255 -->
        <version>2.18.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>fat-jar-pepsi-server-flink</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadeTestJar>false</shadeTestJar>
              <shadedArtifactAttached>false</shadedArtifactAttached>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.pepsi.nglog.NginxLogSummaryJob</mainClass>
                </transformer>
              </transformers>
              <finalName>pepsi-server-flink-${project.version}</finalName>
              <artifactSet>
                <excludes>
                  <exclude>com.google.code.findbugs:jsr305</exclude>
                  <exclude>org.slf4j:*</exclude>
                  <exclude>log4j:*</exclude>
                  <exclude>org.xerial.snappy:snappy-java</exclude>
                  <exclude>com.fasterxml.jackson.core:*</exclude>
                  <exclude>com.esotericsoftware.kryo:kryo</exclude>
                  <exclude>com.esotericsoftware.minlog:minlog</exclude>
                  <exclude>org.objenesis:objenesis</exclude>
                </excludes>
              </artifactSet>
              <relocations combine.children="append">
                <relocation>
                  <pattern>com.fasterxml.jackson</pattern>
                  <shadedPattern>org.apache.flink.shaded.jackson2.com.fasterxml.jackson</shadedPattern>
                </relocation>
              </relocations>
              <!--
              <filters>
                  <filter>
                      <artifact>*</artifact>
                      <includes>
                          <include>com/oyo/**</include>
                          <include>config/**</include>
                          <include>*.properties</include>
                          <include>org/apache/flink/streaming/**</include>
                          <include>org/apache/kafka/**</include>
                          <include>org/apache/jute/**</include>
                          <include>org/I0Itec/**</include>
                          <include>jline/**</include>
                          <include>com/yammer/**</include>
                          <include>kafka/**</include>
                      </includes>
                  </filter>
              </filters>
              -->
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
